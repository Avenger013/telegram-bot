from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

import application.keyboard as kb

router = Router(name=__name__)


@router.message(CommandStart())
async def smd_start(message: Message):
    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
        "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —É—á–µ–Ω–∏–∫–∞ - /profile\n\n"
        "üéÅ–í –Ω–∞—à–µ–º –±–æ—Ç–µ –µ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ–±–º–µ–Ω–∞ –±–∞–ª–ª–æ–≤, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–æ–∏—Ö –±–∞–ª–ª–æ–≤ –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ - /monetization\n\n"
        "üéÅ–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –Ω–∞—à–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π, —É—á–µ–Ω–∏–∫–∏ –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏—è –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞—é—Ç –±–∞–ª–ª—ã –∏ –ª–µ–≥–∫–æ –∏—Ö –æ–±–º–µ–Ω–∏–≤–∞—Ç—å –Ω–∞ —Ä–∞–∑–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –Ω–∞—Å, –≤–∫–ª—é—á–∞—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è, —Ñ—É—Ç–±–æ–ª–∫–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.\n"
        "–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ - /monetization\n\n"
        "üíé–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–µ —É—á–µ–Ω–∏–∫–∞–º–∏ –∑–∞–¥–∞–Ω–∏—è –∏ –Ω–∞—á–∏—Å–ª—è—Ç—å –∑–∞ —ç—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∞–ª–ª—ã, –Ω–æ –±–∞–ª–ª—ã –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ —Å—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π, –Ω–æ –µ—â–µ –∏ –∑–∞ —Å—á–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –æ—Ç —Å–∞–º–æ–π —à–∫–æ–ª—ã. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ - /monetization\n\n"
        "‚ùî–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã - /info"
        "\n\n–ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –ø–æ–ª—É—á–∞—Ç—å –æ—Ç –±–æ—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ä–∞—Å—Å—ã–ª–∫–∏ –∏ —Ä–µ–∫–ª–∞–º—É."
    )
    await message.answer(text=welcome_text, reply_markup=kb.menu)


@router.callback_query(F.data.startswith('cancellation'))
async def call_cancellation(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, <b>{callback.from_user.first_name}</b>, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
        "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —É—á–µ–Ω–∏–∫–∞ - /profile\n"
        "–û—Ç–ø—Ä–∞–≤–∫–∞ –î–ó - /homework\n\n"
        "üéÅ–í –Ω–∞—à–µ–º –±–æ—Ç–µ –µ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ–±–º–µ–Ω–∞ –±–∞–ª–ª–æ–≤\n"
        "‚îú –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–æ–∏—Ö –±–∞–ª–ª–æ–≤ –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ\n"
        "‚îú –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ - /monetization\n\n"
        "üéÅ–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –Ω–∞—à–∏—Ö —É—á–µ–Ω–∏–∫–æ–≤ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π\n"
        "‚îú –£—á–µ–Ω–∏–∫–∏ –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏—è –∑–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞—é—Ç –±–∞–ª–ª—ã –∏ –ª–µ–≥–∫–æ –∏—Ö –æ–±–º–µ–Ω–∏–≤–∞—Ç—å –Ω–∞ —Ä–∞–∑–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –Ω–∞—Å\n"
        "‚îú –ü–æ–¥–∞—Ä–∫–∏: –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è, —Ñ—É—Ç–±–æ–ª–∫–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ\n"
        "‚îú –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ - /monetization\n\n"
        "üíé–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –ø—Ä–∏—Å–ª–∞–Ω–Ω—ã–µ —É—á–µ–Ω–∏–∫–∞–º–∏ –∑–∞–¥–∞–Ω–∏—è –∏ –Ω–∞—á–∏—Å–ª—è—Ç—å –∑–∞ —ç—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∞–ª–ª—ã\n"
        "‚îú –ù–æ –±–∞–ª–ª—ã –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ –∑–∞ —Å—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π\n"
        "‚îú –¢–∞–∫–∂–µ –±–∞–ª–ª—ã –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∑–∞ —Å—á–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π –æ—Ç —Å–∞–º–æ–π —à–∫–æ–ª—ã\n"
        "‚îú –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ - /monetization\n\n"
        "‚ùî–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã - /info"
        "\n\n–ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –ø–æ–ª—É—á–∞—Ç—å –æ—Ç –±–æ—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ä–∞—Å—Å—ã–ª–∫–∏ –∏ —Ä–µ–∫–ª–∞–º—É."
    )
    await callback.message.edit_text(text=welcome_text, parse_mode='HTML', reply_markup=kb.back3)
